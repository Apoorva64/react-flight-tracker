.default-yarn:
  image: node:latest
  before_script:
    - yarn install
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    policy: pull-push
    paths:
      - node_modules/
      - .yarn/
      - .cache/

.build-on:
  only:
    - master
    - develop

stages:
  - lint
  - build
  - test
  - release
  - dast

lint:
  extends: .default-yarn
  stage: lint
  script:
    - yarn lint
    - npx tsc --noEmit

build-app:
  extends:
    - .default-yarn
    - .build-on
  stage: build
  script:
    - yarn build
  artifacts:
    paths:
      - dist/

variables:
  DOCKER_DRIVER: overlay2
  BUILDX_VERSION: "v0.6.1"
  BUILDX_ARCH: "linux-amd64"

build-image:
  extends: .build-on
  image: docker:20.10
  stage: release

  needs:
    - job: build-app
      artifacts: true
    - job: release
  services:
    - docker:20.10-dind
  before_script:
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - wget -O /usr/bin/docker-buildx
      https://github.com/docker/buildx/releases/download/${BUILDX_VERSION}/buildx-${BUILDX_VERSION}.${BUILDX_ARCH}
    - chmod +x /usr/bin/docker-buildx
    - apk add --no-cache git
    - apk add jq
  script:
    - docker buildx create --use
    - export APP_VERSION=$(jq -r ".version" package.json)
    - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH  -t $CI_REGISTRY_IMAGE:$APP_VERSION --push .
  tags:
    - docker


release:
  extends:
    - .default-yarn
    - .build-on
  stage: release
  script:
    - yarn semantic-release

sast:
  stage: test

dast:
  stage: dast
  needs:
    - release
  variables:
    DAST_WEBSITE: "https://react-flight-tracker.dev.apoorva64.com/"
    DAST_BROWSER_SCAN: "true"
include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/DAST.gitlab-ci.yml
